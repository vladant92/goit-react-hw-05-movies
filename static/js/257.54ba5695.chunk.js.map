{"version":3,"file":"static/js/257.54ba5695.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 85px;\n  padding: 7px 10px;\n  column-gap: 5px;\n\n  border-radius: 5px;\n\n  font-size: 16px;\n  font-weight: 500;\n  background-color: #bedeec;\n\n  transition: transform 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    color 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    transform: scale(1.05);\n    color: #ffffff;\n    background-color: #2a2f4f;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  margin: 15px 0;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 20px;\n    flex-direction: row;\n    row-gap: 0px;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Overview = styled.p`\n  line-height: 1.3;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Genre = styled.li`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #bedeec;\n\n  padding: 7px 10px;\n  border-radius: 5px;\n`;\n\nexport const AdditionalInfo = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { BsPeople, BsChatLeftText } from 'react-icons/bs';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'services/movieAPI';\nimport {\n  StyledLink,\n  MovieContainer,\n  InfoContainer,\n  Overview,\n  GenresList,\n  Genre,\n  AdditionalInfo,\n  AddInfoList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const movieDetails = await getMovieDetails(\n          movieId,\n          abortCtrl.current.signal\n        );\n        setMovieInfo(movieDetails);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  const {\n    title,\n    release_date,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n    vote_average,\n  } = movieInfo || {};\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      {!isLoading && movieInfo && (\n        <>\n          <StyledLink to={backLinkHref}>\n            <FaArrowLeft />\n            Go back\n          </StyledLink>\n          <div>\n            <MovieContainer>\n              <img\n                width=\"300px\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://placehold.jp/300x450.png`\n                }\n                alt={original_title}\n              />\n              <InfoContainer>\n                <h1>\n                  {title} ({release_date.slice(0, 4)})\n                </h1>\n                <p>User score: {Math.floor(vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <Overview>{overview}</Overview>\n                <h2>Genres</h2>\n                <GenresList>\n                  {genres?.map(genre => (\n                    <Genre key={genre.id}>{genre.name}</Genre>\n                  ))}\n                </GenresList>\n              </InfoContainer>\n            </MovieContainer>\n            <AdditionalInfo>Additional information</AdditionalInfo>\n            <AddInfoList>\n              <li>\n                <StyledLink to=\"cast\" state={{ ...location.state }}>\n                  <BsPeople />\n                  Cast\n                </StyledLink>\n              </li>\n              <li>\n                <StyledLink to=\"reviews\" state={{ ...location.state }}>\n                  <BsChatLeftText />\n                  Reviews\n                </StyledLink>\n              </li>\n            </AddInfoList>\n          </div>\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'd1ba1e64f9d6a08c9b908b32af105306';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieContainer","_templateObject2","InfoContainer","_templateObject3","Overview","_templateObject4","GenresList","_templateObject5","Genre","_templateObject6","AdditionalInfo","_templateObject7","AddInfoList","_templateObject8","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","abortCtrl","useRef","location","useLocation","backLinkHref","state","from","useEffect","getMovieInfo","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","current","abort","AbortController","getMovieDetails","signal","sent","t0","code","message","finish","stop","apply","arguments","_ref2","title","release_date","overview","genres","poster_path","original_title","vote_average","_jsxs","_Fragment","children","_jsx","Loader","to","FaArrowLeft","width","src","concat","alt","slice","Math","floor","map","genre","name","id","_objectSpread","BsPeople","BsChatLeftText","Suspense","fallback","Outlet","API_KEY","axios","getTrending","response","params","api_key","language","abrupt","data","results","_x","getMoviesByQuery","_callee2","query","_context2","include_adult","page","_x2","_x3","_ref3","_callee3","_context3","_x4","_x5","getCast","_ref4","_callee4","_context4","cast","_x6","_x7","getReviews","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}