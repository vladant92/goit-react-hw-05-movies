{"version":3,"file":"static/js/297.a47d6c87.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 35px;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const StyledItem = styled.li`\n  background-color: #4988f5;\n  border-radius: 7px;\n  overflow: hidden;\n  width: 300px;\n\n  transition: transform 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  object-fit: cover;\n  min-height: 450px;\n`;\n\nexport const MovieName = styled.p`\n  padding: 10px;\n  font-weight: 500;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledList,\n  StyledLink,\n  MovieName,\n  StyledItem,\n  StyledImg,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movieItems }) => {\n  const location = useLocation();\n\n  const chooseURL = id => {\n    return location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  };\n\n  return (\n    <StyledList>\n      {movieItems.map(({ poster_path, id, title }) => {\n        return (\n          <StyledItem key={id}>\n            <StyledLink to={chooseURL(id)} state={{ from: location }}>\n              <StyledImg\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://placehold.jp/300x450.png`\n                }\n                alt=\"\"\n                width=\"300\"\n              />\n              <MovieName>{title}</MovieName>\n            </StyledLink>\n          </StyledItem>\n        );\n      })}\n    </StyledList>\n  );\n};\n\nMoviesList.propTypes = {\n  movieItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import { Form, Field } from 'formik';\nimport styled from '@emotion/styled';\n// 2A2F4F\n// 917FB3\n// E5BEEC\n// FDE2F3\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 30px;\n  border: 1px solid #bedeec;\n  outline: none;\n  min-width: 220px;\n\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  font-size: 16px;\n  padding: 2px 7px;\n\n  transition: border-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:focus {\n    border-color: #2a2f4f;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 5px;\n  min-width: 100px;\n  height: 36px;\n  padding: 8px 10px;\n\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border: none;\n  cursor: pointer;\n\n  font-size: 16px;\n  font-weight: 600;\n  background-color: #bedeec;\n\n  transition: color 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    color: #ffffff;\n    background-color: #2a2f4f;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { Formik, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Button, StyledField, StyledForm } from './Searchbar.styled';\n\nconst Searchbar = ({ onQueryChange }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n    onQueryChange(movieName);\n  }, [movieName, onQueryChange]);\n\n  const handleSearchSubmit = (values, action) => {\n    const query = values.query;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSearchSubmit}>\n      <StyledForm>\n        <StyledField\n          type=\"text\"\n          name=\"query\"\n          title=\"Please enter movie name.\"\n          placeholder=\"Movie name\"\n          required\n        />\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Button type=\"submit\">\n          <FaSearch />\n          Search\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nSearchbar.propTypes = {\n  onQueryChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect, useRef, useState } from 'react';\nimport { getMoviesByQuery } from 'services/movieAPI';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const getMovieInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const movies = await getMoviesByQuery(query, abortCtrl.current.signal);\n\n        if (movies.length === 0) {\n          return toast.info('Sorry, no movies for your query...', {\n            position: toast.POSITION.TOP_RIGHT,\n          });\n        }\n\n        setMovies(movies);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieInfo();\n  }, [query]);\n\n  const onQueryChange = searchQuery => {\n    if (searchQuery === query) {\n      return;\n    }\n    setQuery(searchQuery);\n    setError(null);\n  };\n\n  return (\n    <>\n      <ToastContainer autoClose={2500} />\n      <Searchbar onQueryChange={onQueryChange} />\n\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      {!isLoading && movies.length > 0 && <MoviesList movieItems={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'd1ba1e64f9d6a08c9b908b32af105306';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledItem","_templateObject2","StyledLink","Link","_templateObject3","StyledImg","_templateObject4","MovieName","_templateObject5","_ref","movieItems","location","useLocation","chooseURL","id","pathname","concat","_jsx","children","map","_ref2","poster_path","title","_jsxs","to","state","from","src","alt","width","StyledForm","Form","StyledField","Field","Button","_searchParams$get","onQueryChange","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","movieName","get","useEffect","Formik","initialValues","query","onSubmit","values","action","resetForm","type","name","placeholder","required","ErrorMessage","component","FaSearch","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setQuery","_useState7","_useState8","error","setError","abortCtrl","useRef","getMovieInfo","_asyncToGenerator","_regeneratorRuntime","_callee","_movies","_context","prev","next","current","abort","AbortController","getMoviesByQuery","signal","sent","length","abrupt","toast","position","t0","code","message","finish","stop","apply","arguments","_Fragment","ToastContainer","autoClose","Searchbar","searchQuery","Loader","MoviesList","API_KEY","axios","getTrending","response","params","api_key","language","data","results","_x","_callee2","_context2","include_adult","page","_x2","_x3","getMovieDetails","_ref3","_callee3","movieId","_context3","_x4","_x5","getCast","_ref4","_callee4","_context4","cast","_x6","_x7","getReviews","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}