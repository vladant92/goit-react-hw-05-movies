{"version":3,"file":"static/js/387.6db8d3f6.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movieAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n`;\n\nexport const ReviewsItem = styled.li`\n  padding: 10px;\n  background-color: #4988f5;\n  border-radius: 10px;\n`;\n\nexport const AuthorTitle = styled.h2`\n  margin-bottom: 5px;\n`;\n\nexport const ReviewText = styled.p`\n  line-height: 1.3;\n`;\n","import { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/movieAPI';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  AuthorTitle,\n  ReviewText,\n  ReviewsItem,\n  ReviewsList,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    const getReviewInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const reviewsInfo = await getReviews(movieId, abortCtrl.current.signal);\n\n        if (reviewsInfo.length === 0) {\n          return toast.info('Sorry, there are no reviews for this movie yet.', {\n            position: toast.POSITION.TOP_RIGHT,\n          });\n        }\n\n        setReviews(reviewsInfo);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getReviewInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      <ToastContainer autoClose={2500} />\n\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      {!isLoading && reviews.length > 0 && (\n        <div>\n          <ReviewsList>\n            {reviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id}>\n                <AuthorTitle>Author: {author}</AuthorTitle>\n                <ReviewText>{content}</ReviewText>\n              </ReviewsItem>\n            ))}\n          </ReviewsList>\n        </div>\n      )}\n\n      {!isLoading && reviews.length === 0 && (\n        <div>Sorry, there are no reviews for this movie yet.</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd1ba1e64f9d6a08c9b908b32af105306';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","ReviewsItem","_templateObject2","AuthorTitle","_templateObject3","ReviewText","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","abortCtrl","useRef","useEffect","getReviewInfo","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","reviewsInfo","_context","prev","next","current","abort","AbortController","getReviews","signal","sent","length","abrupt","toast","position","t0","code","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","ToastContainer","autoClose","Loader","map","_ref2","id","author","content","API_KEY","axios","getTrending","response","params","api_key","language","data","results","_x","getMoviesByQuery","_callee2","query","_context2","include_adult","page","_x2","_x3","getMovieDetails","_ref3","_callee3","_context3","concat","_x4","_x5","getCast","_ref4","_callee4","_context4","cast","_x6","_x7","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}